# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.
version: '3.4'

services:
  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_DB: ticket-store
      POSTGRES_USER: ticket-store
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 14268:14268
      - 14250:14250
      - 9411:9411

  promoter_api:
    image: ${DOCKER_REGISTRY-}promoter_api
    build:
      context: .
      dockerfile: ./Dockerfile.Promoter
    ports:
      - 5286:5286
    depends_on:
      - rabbitmq
      - db
      - jaeger
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317

  catalog_api:
    image: ${DOCKER_REGISTRY-}catalog_api
    build:
      context: .
      dockerfile: ./Dockerfile.Catalog
    ports:
      - 7139:7139
    depends_on:
      - rabbitmq
      - db
      - jaeger
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317

volumes:
  db-data:
